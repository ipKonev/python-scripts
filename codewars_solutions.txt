def is_isogram(string):
    return len(string) == len(set(string.lower()))
-----------------------------------------------------------------
unique_in_order = lambda l: [z for i, z in enumerate(l) if i == 0 or l[i - 1] != z]

def unique_in_order(iterable):
    res = []
    for item in iterable:
        if len(res) == 0 or item != res[-1]:
            res.append(item)
    return res

from itertools import groupby

def unique_in_order(iterable):
    return [k for (k, _) in groupby(iterable)]
-----------------------------------------------------------------
def digitize(n):
    return map(int, str(n)[::-1])
	
-----------------------------------------------------------------

def duplicate_count(s):
  return len([c for c in set(s.lower()) if s.lower().count(c)>1]
  
-----------------------------------------------------------------

def comp(array1, array2):
    try:
        return sorted([i ** 2 for i in array1]) == sorted(array2)
    except:
        return False

-----------------------------------------------------------------

import string

def is_pangram(s):
    return set(string.lowercase) <= set(s.lower())

-----------------------------------------------------------------
def zero(f = None): return 0 if not f else f(0)
def one(f = None): return 1 if not f else f(1)
def two(f = None): return 2 if not f else f(2)
def three(f = None): return 3 if not f else f(3)
def four(f = None): return 4 if not f else f(4)
def five(f = None): return 5 if not f else f(5)
def six(f = None): return 6 if not f else f(6)
def seven(f = None): return 7 if not f else f(7)
def eight(f = None): return 8 if not f else f(8)
def nine(f = None): return 9 if not f else f(9)

def plus(y): return lambda x: x+y
def minus(y): return lambda x: x-y
def times(y): return lambda  x: x*y
def divided_by(y): return lambda  x: x/y

-----------------------------------------------------------------

def to_weird_case_word(string):
    return "".join(c.upper() if i%2 == 0 else c for i, c in enumerate(string.lower()))
    
def to_weird_case(string):
    return " ".join(to_weird_case_word(str) for str in string.split())
-----------------------------------------------------------------

from gmpy2 import mpz

def sum_strings(x, y):
    return str(mpz(x or '0') + mpz(y or '0'))
-----------------------------------------------------------------

def find_it(seq):
    for i in seq:
        if seq.count(i)%2!=0:
            return i